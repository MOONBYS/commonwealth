/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProjectFactory,
  ProjectFactoryInterface,
} from "../ProjectFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_acceptedTokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_priceOralceAggregator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "_feeTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "_projectImp",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cwTokenImp",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "projectHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "project",
        type: "address",
      },
    ],
    name: "ProjectCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "acceptedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
    ],
    name: "addAcceptedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allProjects",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_name",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_ipfsHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_cwUrl",
        type: "bytes32",
      },
      {
        internalType: "address payable",
        name: "_beneficiary",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_acceptedTokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_nominations",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_curatorFee",
        type: "uint256",
      },
    ],
    name: "createProject",
    outputs: [
      {
        internalType: "address",
        name: "newProject",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAcceptedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllProjects",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "cwTokenImp",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "protocolFee",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "feeTo",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "maxFee",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.ProtocolData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAcceptedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOralceAggregator",
    outputs: [
      {
        internalType: "contract IPriceOracleAggregator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "projectImp",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "projects",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolData",
    outputs: [
      {
        internalType: "address",
        name: "cwTokenImp",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "protocolFee",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "feeTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cwToken",
        type: "address",
      },
    ],
    name: "setCWTokenImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_feeTo",
        type: "address",
      },
    ],
    name: "setFeeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_projectImpl",
        type: "address",
      },
    ],
    name: "setProjectImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_protocolFee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001b6d38038062001b6d8339810160408190526200003491620003ab565b6001600160a01b038716620000665760405162461bcd60e51b81526004016200005d90620004eb565b60405180910390fd5b6001600160a01b0385166200008f5760405162461bcd60e51b81526004016200005d90620005c7565b600084118015620000a257506127108411155b620000c15760405162461bcd60e51b81526004016200005d9062000635565b6001600160a01b038316620000ea5760405162461bcd60e51b81526004016200005d9062000522565b6001600160a01b038216620001135760405162461bcd60e51b81526004016200005d9062000559565b6001600160a01b0381166200013c5760405162461bcd60e51b81526004016200005d90620005fe565b600880546001600160a01b03199081166001600160a01b0388811691909117909255606089811b6001600160601b0319166080908152600480548416878616179055604080519182018152858516808352602083018a905294881690820181905261271091909201819052600080548416909417909355600187905560028054909216179055600355620001d086620001dd565b50505050505050620006ef565b805180620001ff5760405162461bcd60e51b81526004016200005d9062000661565b60005b81811015620003945760006001600160a01b03168382815181106200023757634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03161415620002695760405162461bcd60e51b81526004016200005d9062000590565b600960008483815181106200028e57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166200037f57600160096000858481518110620002e157634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555060078382815181106200034357634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b806200038b8162000698565b91505062000202565b505050565b8051620003a681620006d6565b919050565b600080600080600080600060e0888a031215620003c6578283fd5b8751620003d381620006d6565b602089810151919850906001600160401b0380821115620003f2578586fd5b818b0191508b601f83011262000406578586fd5b8151818111156200041b576200041b620006c0565b838102604051858282010181811085821117156200043d576200043d620006c0565b806040525080935082815285810193508585018f878488010111156200046157898afd5b8995505b838610156200048e57620004798162000399565b85526001959095019493860193860162000465565b50809b50505050505050620004a66040890162000399565b945060608801519350620004bd6080890162000399565b9250620004cd60a0890162000399565b9150620004dd60c0890162000399565b905092959891949750929550565b60208082526014908201527f504a4641433a20494e56414c49445f4f574e4552000000000000000000000000604082015260600190565b60208082526014908201527f504a4641433a20494e56414c49445f464545544f000000000000000000000000604082015260600190565b6020808252601b908201527f504a4641433a20494e56414c49445f50524f4a4543545f414444520000000000604082015260600190565b6020808252601d908201527f504a4641433a20494e56414c49445f41434345505445445f544f4b454e000000604082015260600190565b60208082526019908201527f504a4641433a20494e56414c49445f41474752454741544f5200000000000000604082015260600190565b6020808252601b908201527f504a4641433a20494e56414c49445f4357544f4b454e5f414444520000000000604082015260600190565b602080825260129082015271504a4641433a20494e56414c49445f46454560701b604082015260600190565b60208082526018908201527f504a4641433a204e4f5f41434345505445445f544f454b4e0000000000000000604082015260600190565b6000600019821415620006b957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620006ec57600080fd5b50565b60805160601c61143c620007316000396000818161036101528181610445015281816104db015281816105080152818161059601526109d8015261143c6000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806385e6e9c2116100a2578063b96ea12d11610071578063b96ea12d146101f1578063d7691f8f14610204578063d8869b4f1461021c578063f2db83f31461022f578063f46901ed146102425761010b565b806385e6e9c2146101bb5780638cf088d4146101ce5780638da5cb5b146101d6578063a6217d0a146101de5761010b565b806353b3194c116100de57806353b3194c146101835780636e20705814610196578063787dce3d1461019e57806380d03829146101b35761010b565b80632d94bffe146101105780632f7570061461012e57806336c87754146101435780633b6e750f14610163575b600080fd5b610118610255565b6040516101259190611359565b60405180910390f35b610136610296565b6040516101259190610f79565b610156610151366004610de7565b6102f8565b6040516101259190610f3b565b610176610171366004610d69565b610322565b6040516101259190610f8c565b610156610191366004610de7565b610337565b610156610347565b6101b16101ac366004610de7565b610356565b005b6101366103da565b6101b16101c9366004610d69565b61043a565b6101566104ca565b6101566104d9565b6101b16101ec366004610d8c565b6104fd565b6101566101ff366004610de7565b610551565b61020c61056c565b6040516101259493929190610f4f565b6101b161022a366004610d69565b61058b565b61015661023d366004610dff565b61061b565b6101b1610250366004610d69565b6109cd565b61025d610c80565b50604080516080810182526000546001600160a01b03908116825260015460208301526002541691810191909152600354606082015290565b606060078054806020026020016040519081016040528092919081815260200182805480156102ee57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102d0575b5050505050905090565b6007818154811061030857600080fd5b6000918252602090912001546001600160a01b0316905081565b60096020526000908152604090205460ff1681565b6006818154811061030857600080fd5b6008546001600160a01b031681565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103a75760405162461bcd60e51b815260040161039e90611131565b60405180910390fd5b6000811180156103b957506003548111155b6103d55760405162461bcd60e51b815260040161039e9061119d565b600155565b606060068054806020026020016040519081016040528092919081815260200182805480156102ee576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116102d0575050505050905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104825760405162461bcd60e51b815260040161039e90611131565b6001600160a01b0381166104a85760405162461bcd60e51b815260040161039e906110c3565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105455760405162461bcd60e51b815260040161039e90611131565b61054e81610a5d565b50565b6005602052600090815260409020546001600160a01b031681565b6000546001546002546003546001600160a01b03938416939091169084565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105d35760405162461bcd60e51b815260040161039e90611131565b6001600160a01b0381166105f95760405162461bcd60e51b815260040161039e906110fa565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0387166106435760405162461bcd60e51b815260040161039e90611166565b836106605760405162461bcd60e51b815260040161039e90610fae565b8261067d5760405162461bcd60e51b815260040161039e9061120b565b8161069a5760405162461bcd60e51b815260040161039e9061105e565b8551806106b95760405162461bcd60e51b815260040161039e90611279565b60005b818110156107e957600960008983815181106106e857634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff1661072b5760405162461bcd60e51b815260040161039e90610fe5565b60085488516001600160a01b039091169063eb9d14a9908a908490811061076257634e487b7160e01b600052603260045260246000fd5b60200260200101516040518263ffffffff1660e01b81526004016107869190610f3b565b60206040518083038186803b15801561079e57600080fd5b505afa1580156107b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d69190610ead565b50806107e1816113aa565b9150506106bc565b50600033898d886040516020016108039493929190610f08565b60408051601f198184030181529190528051602090910120600454909150610834906001600160a01b031682610c0a565b925060006040518061010001604052808e81526020018d81526020018c81526020018b6001600160a01b03168152602001336001600160a01b0316815260200160068054905060016108869190611392565b8152306020820152604090810184905251633f6f1d8960e11b81529091506001600160a01b03851690637ede3b12906108cd9084908d908d908d908d908d906004016112b0565b602060405180830381600087803b1580156108e757600080fd5b505af11580156108fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091f9190610dc7565b5060008281526005602052604080822080546001600160a01b0388166001600160a01b031991821681179092556006805460018101825594527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f909301805490931617909155517f5ba3dc7035dd9b2bc894e663e65dcf08b18a2e2bdb0116539cb2af5cf0d19d4d906109b59084908790610f97565b60405180910390a15050509998505050505050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610a155760405162461bcd60e51b815260040161039e90611131565b6001600160a01b038116610a3b5760405162461bcd60e51b815260040161039e90611095565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b805180610a7c5760405162461bcd60e51b815260040161039e90611242565b60005b81811015610c055760006001600160a01b0316838281518110610ab257634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03161415610ae15760405162461bcd60e51b815260040161039e906111d4565b60096000848381518110610b0557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16610bf357600160096000858481518110610b5657634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055506007838281518110610bb757634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b039092169190911790555b80610bfd816113aa565b915050610a7f565b505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b038116610c7a5760405162461bcd60e51b815260040161039e90611027565b92915050565b604051806080016040528060006001600160a01b031681526020016000815260200160006001600160a01b03168152602001600081525090565b8035610cc5816113f1565b919050565b600082601f830112610cda578081fd5b8135602067ffffffffffffffff80831115610cf757610cf76113db565b81830260405183828201018181108482111715610d1657610d166113db565b60405284815283810192508684018288018501891015610d34578687fd5b8692505b85831015610d5d57610d4981610cba565b845292840192600192909201918401610d38565b50979650505050505050565b600060208284031215610d7a578081fd5b8135610d85816113f1565b9392505050565b600060208284031215610d9d578081fd5b813567ffffffffffffffff811115610db3578182fd5b610dbf84828501610cca565b949350505050565b600060208284031215610dd8578081fd5b81518015158114610d85578182fd5b600060208284031215610df8578081fd5b5035919050565b60008060008060008060008060006101208a8c031215610e1d578485fd5b8935985060208a0135975060408a0135965060608a0135610e3d816113f1565b955060808a013567ffffffffffffffff80821115610e59578687fd5b610e658d838e01610cca565b965060a08c0135915080821115610e7a578586fd5b50610e878c828d01610cca565b94505060c08a0135925060e08a013591506101008a013590509295985092959850929598565b600060208284031215610ebe578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610efd5781516001600160a01b031687529582019590820190600101610ed8565b509495945050505050565b6bffffffffffffffffffffffff19606095861b811682529390941b90921660148401526028830152604882015260680190565b6001600160a01b0391909116815260200190565b6001600160a01b039485168152602081019390935292166040820152606081019190915260800190565b600060208252610d856020830184610ec5565b901515815260200190565b9182526001600160a01b0316602082015260400190565b60208082526018908201527f504a4641433a20494e56414c49445f5448524553484f4c440000000000000000604082015260600190565b60208082526022908201527f504a4641433a204e4f545f50524f544f434f4c5f41434345505445445f544f4b60408201526122a760f11b606082015260800190565b60208082526017908201527f455243313136373a2063726561746532206661696c6564000000000000000000604082015260600190565b6020808252601a908201527f504a4641433a20494e56414c49445f43555241544f525f464545000000000000604082015260600190565b602080825260149082015273504a4641433a20494e56414c49445f464545544f60601b604082015260600190565b6020808252601b908201527f504a4641433a20494e56414c49445f4357546f6b656e5f494d504c0000000000604082015260600190565b6020808252601b908201527f504a4641433a20494e56414c49445f50524f4a4543545f494d504c0000000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601a908201527f504a4641433a20494e56414c49445f42454e4546494349415259000000000000604082015260600190565b6020808252601b908201527f504a4641433a20494e56414c49445f50524f544f434f4c5f4645450000000000604082015260600190565b6020808252601d908201527f504a4641433a20494e56414c49445f41434345505445445f544f4b454e000000604082015260600190565b60208082526017908201527f504a4641433a20494e56414c49445f444541444c494e45000000000000000000604082015260600190565b60208082526018908201527f504a4641433a204e4f5f41434345505445445f544f454b4e0000000000000000604082015260600190565b60208082526018908201527f504a4641433a204e4f5f41434345505445445f544f4b454e0000000000000000604082015260600190565b60006101a0885183526020890151602084015260408901516040840152606089015160018060a01b0380821660608601528060808c015116608086015260a08b015160a08601528060c08c01511660c0860152505060e089015160e08401528061010084015261132281840189610ec5565b90508281036101208401526113378188610ec5565b6101408401969096525050610160810192909252610180909101529392505050565b81516001600160a01b03908116825260208084015190830152604080840151909116908201526060918201519181019190915260800190565b600082198211156113a5576113a56113c5565b500190565b60006000198214156113be576113be6113c5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461054e57600080fdfea264697066735822122070d30562af93cf1c57357e50ca0e920ac5fbcf9593255af9c248305720070d0b64736f6c63430008000033";

export class ProjectFactory__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _owner: string,
    _acceptedTokens: string[],
    _priceOralceAggregator: string,
    _protocolFee: BigNumberish,
    _feeTo: string,
    _projectImp: string,
    _cwTokenImp: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProjectFactory> {
    return super.deploy(
      _owner,
      _acceptedTokens,
      _priceOralceAggregator,
      _protocolFee,
      _feeTo,
      _projectImp,
      _cwTokenImp,
      overrides || {}
    ) as Promise<ProjectFactory>;
  }
  getDeployTransaction(
    _owner: string,
    _acceptedTokens: string[],
    _priceOralceAggregator: string,
    _protocolFee: BigNumberish,
    _feeTo: string,
    _projectImp: string,
    _cwTokenImp: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _acceptedTokens,
      _priceOralceAggregator,
      _protocolFee,
      _feeTo,
      _projectImp,
      _cwTokenImp,
      overrides || {}
    );
  }
  attach(address: string): ProjectFactory {
    return super.attach(address) as ProjectFactory;
  }
  connect(signer: Signer): ProjectFactory__factory {
    return super.connect(signer) as ProjectFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProjectFactoryInterface {
    return new utils.Interface(_abi) as ProjectFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProjectFactory {
    return new Contract(address, _abi, signerOrProvider) as ProjectFactory;
  }
}
